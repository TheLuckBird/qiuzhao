多表查询：

	查询员工信息：员工号，姓名，月薪和部门名称

	查询员工信息：员工号，姓名，月薪和月薪级别（salgrade表）

	按部门统计员工人数，显示如下信息：部门号，部门名称，人数（注意统计40号部门）
	
自连接：

	查询员工信息：将员工的主管名字也显示出来（KING的主管是他自己）
	
子查询：
	
	查询比scott工资高的员工信息 
	

	注意事项
	*注意书写风格
	* 父查询和子查询可以是不同的表，子查询返回的结果父查询可以使用即可
		查询部门名称是 'SALES' 的员工信息
	 
	* 父查询的select、from、where、having都可以嵌套子查询

		select 后置子查询：查询10号部门的员工号、员工姓名、部门编号、部门名称

		from 后置子查询： 查询员工的姓名、月薪和年薪（使用select * from _________)

		where后置子查询： 查询与ward相同岗位并且月薪比他高的员工信息

		having后置子查询：查询部门最低月薪高于30号部门的部门以及其最低月薪

	* 单行子查询只能使用单行操作符，多行子查询只能使用多行操作符 （这里都是指单列）
		单行操作符，就是对某个单一数据的比较操作
		=|>|>=|<|<=等
		
	* 多行操作符，就是对一个集合的比较操作(IN、ANY、ALL)
	 
		查询部门名称为SALES和ACCOUNTING的员工信息 (IN)
		
		查询月薪比30号部门任意一个（某一个any）员工高的员工信息
		
		查询比30号部门所有员工工资都高的员工信息
		
	* 注意子查询中返回的null值影响最终计算结果
	
		查询不是主管的员工信息
		
	* SQL解析：一般先执行子查询（内查询），再执行父查询（外查询）；关联子查询除外
	
集合运算：

	部门号是10的员工和部门号是20的员工信息做并集（以及全并集）

	用10号部门的员工信息和 10,20号部门的员工信息做交集
	
	用10,30的员工减去10,20的员工信息
	
	查询三个部门的工资信息并分组统计，格式如下：
	    DEPTNO JOB                  SUM(SAL)
	---------- ------------------ ----------
			10 CLERK                    1300
			   MANAGER                  2450
			   PRESIDENT                5000
										8750

			20 ANALYST                  6000
			   CLERK                    1900
			   MANAGER                  2975
									   10875

			30 CLERK                     950
			   MANAGER                  2850
			   SALESMAN                 5600
										9400

									   29025
	提示：
		SQL plus中使用一下命令来去掉分组重复的deptno
			break on deptno skip 2;
		使用以下命令来恢复
			break on null;

									   
集合运算注意事项：
	* 参与运算的各个集合必须列数相同，且类型一致
	* 采用第一个集合的表头作为最终使用的表头，（别名也只能在第一个集合上起）
    * 可以使用括号修改各个sql执行的优先级
	
	
新增数据：
	
	往部门表里边插入以下几行信息
	    DEPTNO DNAME                        LOC
	---------- ---------------------------- --------------------------
			50 SUPPORT                      WASHINGTON
			60 TEST
			70 PURCHASING



修改数据：
	将60号部门的LOC改成MIAMI
	将50号部门的部门名字改成 SUPPORT1 ，LOC改为NULL
	
删除数据：
	删除部门号为50的部门信息
	删除部门号大于40的部门信息
	
事务
	